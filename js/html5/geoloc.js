// üîπ Geolocation API
const geoBtn = document.getElementById("geoBtn");
const geoResult = document.getElementById("geoResult");

// Helyzet lek√©r√©se gombra kattintva...
geoBtn.addEventListener("click", () => {
    console.log("üìç Helyzet lek√©r√©se gombra kattintva");

    if (navigator.geolocation) {
        // ‚úÖ A b√∂ng√©sz≈ë t√°mogatja a Geolocation API-t
        geoResult.textContent = "Helyzet lek√©r√©se folyamatban...";

        navigator.geolocation.getCurrentPosition(
            // ‚úÖ Sikeres helymeghat√°roz√°s
            position => {
                console.log("‚úÖ Poz√≠ci√≥:", position);
                const lat = position.coords.latitude.toFixed(5);
                const lon = position.coords.longitude.toFixed(5);
                geoResult.textContent = `Sz√©less√©g: ${lat}, Hossz√∫s√°g: ${lon}`;
            },

            // ‚ùå Hiba t√∂rt√©nt
            error => {
                let message = "Ismeretlen hiba t√∂rt√©nt.";

                // Hiba t√≠pusa alapj√°n pontosabb √ºzenet
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        message = "A felhaszn√°l√≥ megtagadta a helymeghat√°roz√°st.";
                        break;
                    case error.POSITION_UNAVAILABLE:
                        message = "A helyzet nem el√©rhet≈ë.";
                        break;
                    case error.TIMEOUT:
                        message = "A helymeghat√°roz√°s t√∫ll√©pte az id≈ëkorl√°tot.";
                        break;
                }

                geoResult.textContent = "Nem siker√ºlt lek√©rni a helyzetet: " + message;
                console.error("‚ùå Helymeghat√°roz√°si hiba:", error);
            }
        );
    } else {
        // ‚ùå A b√∂ng√©sz≈ë nem t√°mogatja
        geoResult.textContent = "A b√∂ng√©sz≈ëd nem t√°mogatja a Geolocation API-t.";
    }
});

// Debug inform√°ci√≥k a konzolra
console.log("geoBtn:", geoBtn, "geoResult:", geoResult, "geolocation support:", navigator.geolocation);
